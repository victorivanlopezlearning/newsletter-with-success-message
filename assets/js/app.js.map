{"version":3,"sources":["app.js"],"names":["formSubmit","document","querySelector","formLabels","inputEmail","addEventListener","e","preventDefault","email","value","isValidEmail","renderMessageSuccess","createLabelError","test","errorMessage","label","createElement","classList","add","textContent","appendChild","setTimeout","remove","divMain","successContainer","className","successContent","successImage","src","alt","successHeading","successDescription","innerHTML","successBtn","href","onclick","location","reload","replaceChildren"],"mappings":"AAEA,MAAMA,WAAaC,SAASC,cAAc,gBACpCC,WAAaF,SAASC,cAAc,cACpCE,WAAaH,SAASC,cAAc,UAE1CF,WAAWK,iBAAiB,QAAUC,IAClCA,EAAEC,iBAEF,MAAMC,EAAQJ,WAAWK,MAEZ,KAAVD,EAKCE,aAAaF,GAKjBG,qBAAqBH,GAJjBI,iBAAiB,wBALjBA,iBAAiB,uBAiBzB,MAAMF,aAAgBF,GACH,iDACFK,KAAKL,GAOhBI,iBAAoBE,IAGtB,IAFmBb,SAASC,cAAc,UAE1B,CACZ,MAAMa,EAAQd,SAASe,cAAc,KACrCD,EAAME,UAAUC,IAAI,cAAe,SACnCH,EAAMI,YAAcL,EAEpBX,WAAWiB,YAAYL,GACvBX,WAAWa,UAAUC,IAAI,sBAEzBG,WAAW,KACPN,EAAMO,SACNlB,WAAWa,UAAUK,OAAO,uBAC7B,OAQLX,qBAAyBH,IAC3B,MAAMe,EAAUtB,SAASC,cAAc,SAEjCsB,EAAmBvB,SAASe,cAAc,OAChDQ,EAAiBC,UAAY,+CAE7B,MAAMC,EAAiBzB,SAASe,cAAc,OAC9CU,EAAeD,UAAY,2BAE3B,MAAME,EAAe1B,SAASe,cAAc,OAC5CW,EAAaF,UAAY,yBACzBE,EAAaC,IAAM,mCACnBD,EAAaE,IAAM,eACnBH,EAAeN,YAAYO,GAE3B,MAAMG,EAAiB7B,SAASe,cAAc,KAC9Cc,EAAeL,UAAY,2BAC3BK,EAAeX,YAAc,0BAC7BO,EAAeN,YAAYU,GAE3B,MAAMC,EAAqB9B,SAASe,cAAc,KAClDe,EAAmBN,UAAY,+BAC/BM,EAAmBC,UAAY,8EAA8ExB,qFAC7GkB,EAAeN,YAAYW,GAE3B,MAAME,EAAahC,SAASe,cAAc,KAC1CiB,EAAWR,UAAY,uBACvBQ,EAAWC,KAAO,IAClBD,EAAWE,QAAW7B,IAClBA,EAAEC,iBACF6B,SAASC,QAAO,IAEpBJ,EAAWd,YAAc,kBAEzBK,EAAiBJ,YAAYM,GAC7BF,EAAiBJ,YAAYa,GAE7BV,EAAQe,gBAAgBd","file":"app.js","sourcesContent":["\r\n\r\nconst formSubmit = document.querySelector('#form-submit');\r\nconst formLabels = document.querySelector('#form-info');\r\nconst inputEmail = document.querySelector('#email');\r\n\r\nformSubmit.addEventListener('click', (e) => {\r\n    e.preventDefault();\r\n    \r\n    const email = inputEmail.value;\r\n\r\n    if(email === '') {\r\n        createLabelError('Email is required');\r\n        return;\r\n    };\r\n\r\n    if(!isValidEmail(email)) {\r\n        createLabelError('Valid email required');\r\n        return;\r\n    };\r\n\r\n    renderMessageSuccess(email);\r\n});\r\n\r\n/**\r\n * Valid email\r\n * @param {String} email\r\n * @returns {Boolean} true: valid | false: invalid\r\n */\r\nconst isValidEmail = (email) => {\r\n    const regex =  /^\\w+([.-_+]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,10})+$/;\r\n    return regex.test(email); \r\n}\r\n\r\n/**\r\n * Create HTML Label Error\r\n * @param {String} errorMessage error message\r\n */\r\nconst createLabelError = (errorMessage) => {\r\n    const existLabel = document.querySelector('.label');\r\n\r\n    if(!existLabel) {\r\n        const label = document.createElement('P');\r\n        label.classList.add('form__error', 'label');\r\n        label.textContent = errorMessage;\r\n    \r\n        formLabels.appendChild(label);\r\n        inputEmail.classList.add('form__input--error');\r\n    \r\n        setTimeout(() => {\r\n            label.remove();\r\n            inputEmail.classList.remove('form__input--error');\r\n        }, 3000);\r\n    };\r\n};\r\n\r\n/**\r\n * Create HTML Success Message\r\n * @param {String} email \r\n */\r\nconst renderMessageSuccess = ( email ) => {\r\n    const divMain = document.querySelector('.main');\r\n    \r\n    const successContainer = document.createElement('DIV');\r\n    successContainer.className = 'success-message container container--success';\r\n\r\n    const successContent = document.createElement('DIV');\r\n    successContent.className = 'success-message__content';\r\n\r\n    const successImage = document.createElement('IMG');\r\n    successImage.className = 'success-message__image';\r\n    successImage.src = './assets/images/icon-success.svg';\r\n    successImage.alt = 'Icon Success';\r\n    successContent.appendChild(successImage);\r\n\r\n    const successHeading = document.createElement('P');\r\n    successHeading.className = 'success-message__heading';\r\n    successHeading.textContent = 'Thanks for subscribing!';\r\n    successContent.appendChild(successHeading);\r\n\r\n    const successDescription = document.createElement('P');\r\n    successDescription.className = 'success-message__description';\r\n    successDescription.innerHTML = `A confirmation email has been sent to <span class=\"success-message__email\">${email}</span>. Please open it and click the button inside to confirm your subscription.`;\r\n    successContent.appendChild(successDescription);\r\n\r\n    const successBtn = document.createElement('A');\r\n    successBtn.className = 'success-message__btn';\r\n    successBtn.href = '#';\r\n    successBtn.onclick = (e) => {\r\n        e.preventDefault();\r\n        location.reload(true);\r\n    };\r\n    successBtn.textContent = 'Dismiss message';\r\n\r\n    successContainer.appendChild(successContent);\r\n    successContainer.appendChild(successBtn);\r\n\r\n    divMain.replaceChildren(successContainer);\r\n};"]}